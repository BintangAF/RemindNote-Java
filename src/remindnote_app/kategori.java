package remindnote_app;

import com.formdev.flatlaf.FlatDarkLaf;
import component.kategoriItem;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import modelData.modelCatatan;
import modelData.modelKategori;
//import com.mysql.jdbc.Connection;


public class kategori extends javax.swing.JFrame {
    koneksi_database koneksiDB = new koneksi_database();
    Connection koneksi = koneksiDB.getConnection();
    
    public kategori() {
        initComponents();
        txt_fieldKategori.putClientProperty("JTextField.placeholderText", "Enter Category Name");
        tampilKategori();
    }
    
    public void refreshKategori(boolean status) {
        if(status) {    
            panelKategori.removeAll();
            panelKategori.repaint();
            panelKategori.revalidate();       
            tampilKategori();
        }
    }
    
    private modelKategori selectedItem = null;
    
    public void isiForm(modelKategori data) {
        selectedItem = data;
        txt_fieldKategori.setText(data.getNama_kategori());        
    }
    
    public void addKategori(modelKategori data) {
        kategoriItem Kategori = new kategoriItem();
        Kategori.setData(data);
        Kategori.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent me) {
                if(SwingUtilities.isLeftMouseButton(me)) {
                    isiForm(data);
                }
            }
        });
        panelKategori.add(Kategori);
        panelKategori.repaint();
        panelKategori.revalidate();
        
    }
    
    private void tampilKategori() {
        String query_tampil_data = "select * from kategori";
        try (Statement stmt = koneksi.createStatement();
            ResultSet rs = stmt.executeQuery(query_tampil_data);) 
        {
            while(rs.next()) {
                int id_kategori = rs.getInt("id_kategori");
                String nama_kategori = rs.getString("nama_kategori");                
                
                modelKategori Kategori = new modelKategori(id_kategori, nama_kategori);
                addKategori(Kategori);
            }
            
        } catch (Exception e) {
             e.printStackTrace();
            // Tampilkan pesan kesalahan jika ada masalah dengan database
            JOptionPane.showMessageDialog(this, "Gagal mengambil data dari database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
//        for (int i = 0; i < 5; i++) {
//            addItem(new modelItem(id, "Catatan"+i, "Ini Isi dari hasil tes coy", "18-5-2024", id));
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_refresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelKategori = new component.panelKategori();
        txt_fieldKategori = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_addKategori = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_refresh.setText("Refresh");
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });
        jPanel1.add(btn_refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 190, -1, -1));

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        panelKategori.setOpaque(true);
        panelKategori.setPreferredSize(new java.awt.Dimension(100, 100));
        panelKategori.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        jScrollPane1.setViewportView(panelKategori);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 650, 180));

        txt_fieldKategori.setOpaque(false);
        txt_fieldKategori.setBackground(new java.awt.Color(0,0,0,1));
        txt_fieldKategori.setBackground(new java.awt.Color(0, 0, 0));
        txt_fieldKategori.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        txt_fieldKategori.setForeground(new java.awt.Color(255, 255, 255));
        txt_fieldKategori.setBorder(null);
        txt_fieldKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_fieldKategoriActionPerformed(evt);
            }
        });
        jPanel1.add(txt_fieldKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, 570, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aset/Kategori.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btn_addKategori.setOpaque(false);
        btn_addKategori.setContentAreaFilled(false);
        btn_addKategori.setBackground(new java.awt.Color(0,0,0,1));
        btn_addKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addKategoriActionPerformed(evt);
            }
        });
        jPanel1.add(btn_addKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 420, 40, 40));

        btn_back.setOpaque(false);
        btn_back.setContentAreaFilled(false);
        btn_back.setBackground(new java.awt.Color(0,0,0,1));
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });
        jPanel1.add(btn_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 10, 40, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt_fieldKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_fieldKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_fieldKategoriActionPerformed

    private void btn_addKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addKategoriActionPerformed
        String namaKategori = txt_fieldKategori.getText();
       
        if(namaKategori.length() > 20) {
            JOptionPane.showMessageDialog(this, "Nama Kategori Maksimal 20 Karakter.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if (selectedItem == null) {
            String query_tambah = "insert into kategori "
            + "(nama_kategori)"
            + "values"
            + "('" + namaKategori + "')";

            try {
                Statement stmt = koneksi.createStatement();
                int rows = stmt.executeUpdate(query_tambah);

//                stmt.close();
//                koneksi.close();

                if(rows > 0) {
                    JOptionPane.showMessageDialog(null,"Data berhasil masuk");
                } else {
                    JOptionPane.showMessageDialog(null,"Data gagal masul");
                }
            } catch (SQLException e) {
                System.err.println("Terjadi Kesalahan: " + e.getMessage());
            }
        } else {
            String query_update = "update kategori set nama_kategori = '" + namaKategori +"' where id_kategori = '" + selectedItem.getId_kategori() + "'";
            
            try {
                Statement stmt = koneksi.createStatement();
                int rows = stmt.executeUpdate(query_update);
//                stmt.close();
                if (rows > 0) {
                    JOptionPane.showMessageDialog(null, "Data Kategori berhasil diperbarui");
                } else {
                    JOptionPane.showMessageDialog(null, "Data Kategori diperbarui");
                }
            } catch (Exception e) {
                System.err.println("Terjadi Kesalahan Dalam Pembaruan Data Kategori: " + e.getMessage());
            }
        }
//        Refresh
        panelKategori.removeAll();
        panelKategori.repaint();
        panelKategori.revalidate();
        tampilKategori();
        
        txt_fieldKategori.setText("");
    }//GEN-LAST:event_btn_addKategoriActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Main main = new Main();
        main.setVisible(true);        
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed
        panelKategori.removeAll();
        panelKategori.repaint();
        panelKategori.revalidate();
        tampilKategori();
        txt_fieldKategori.setText("");
        
    }//GEN-LAST:event_btn_refreshActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        FlatDarkLaf.setup();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kategori().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addKategori;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private component.panelKategori panelKategori;
    private javax.swing.JTextField txt_fieldKategori;
    // End of variables declaration//GEN-END:variables
}
